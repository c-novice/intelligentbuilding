{"remainingRequest":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\src\\components\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\src\\components\\Home.vue","mtime":1629301154641},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lzq\\WebstormProjects\\智慧楼宇\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojY29udGFpbmVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDA7CiAgd2lkdGg6IDgwJTsKfQoKZWwtY29udGFpbmVyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappingsygBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-container>\n    <el-main>\n      <div id=\"container\"></div>\n    </el-main>\n    <el-aside width=\"150\">\n      <el-tree :data=\"simpleData\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree1\" highlight-current\n               :props=\"defaultProps\" @check=\"handleTreeNodeClick\">\n      </el-tree>\n      <el-tree :data=\"detailData\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree2\" highlight-current\n               :props=\"defaultProps\" @check=\"handleTreeNodeClick\">\n      </el-tree>\n    </el-aside>\n  </el-container>\n</template>\n\n<script>\nimport * as THREE from 'three/build/three.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min'\n\n// 场景和控制器\nlet scene = null\nlet controls = null\nlet camera = null\n\n// 详细模型的楼板\n// eslint-disable-next-line camelcase\nlet floor_1 = null\n// eslint-disable-next-line camelcase\nlet floor_2 = null\n// eslint-disable-next-line camelcase\nlet floor_3 = null\n// eslint-disable-next-line camelcase\nlet floor_4 = null\n// eslint-disable-next-line camelcase\nlet floor_5 = null\n// eslint-disable-next-line camelcase\nlet floor_6 = null\n\n// 详细模型的桌椅\n// eslint-disable-next-line camelcase\nlet context_1 = null\n// eslint-disable-next-line camelcase\nlet context_2 = null\n// eslint-disable-next-line camelcase\nlet context_3 = null\n// eslint-disable-next-line camelcase\nlet context_4 = null\n// eslint-disable-next-line camelcase\nlet context_5 = null\n// eslint-disable-next-line camelcase\nlet context_6 = null\n\nexport default {\n  data () {\n    return {\n      // 树形组件\n      simpleData: [{\n        id: 0,\n        label: '整体模型'\n      }],\n      detailData: [{\n        id: 1,\n        label: '详细模型',\n        children: [\n          { id: 11, label: '1L', children: [{ id: 101, label: '1L墙体' }, { id: 102, label: '1L桌椅' }] },\n          { id: 12, label: '2L', children: [{ id: 103, label: '2L墙体' }, { id: 104, label: '2L桌椅' }] },\n          { id: 13, label: '3L', children: [{ id: 105, label: '3L墙体' }, { id: 106, label: '3L桌椅' }] },\n          { id: 14, label: '4L', children: [{ id: 107, label: '4L墙体' }, { id: 108, label: '4L桌椅' }] },\n          { id: 15, label: '5L', children: [{ id: 109, label: '5L墙体' }, { id: 110, label: '5L桌椅' }] },\n          { id: 16, label: '6L', children: [{ id: 111, label: '6L墙体' }, { id: 112, label: '6L桌椅' }] }\n        ]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 场景组件\n      renderer: null,\n      mesh: null,\n      clock: null,\n      // 模型组件\n\n      // 判断加载\n      isLoaded_0: false,\n      isLoaded_1: false,\n      isLoaded_11: false,\n      isLoaded_12: false,\n      isLoaded_13: false,\n      isLoaded_14: false,\n      isLoaded_15: false,\n      isLoaded_16: false\n    }\n  },\n  mounted () {\n    this.init()\n    this.animate()\n  },\n  methods: {\n    // 选择状态置空\n    resetChecked () {\n      this.$refs.tree1.setCheckedKeys([])\n      this.$refs.tree2.setCheckedKeys([])\n    },\n    setCheckedKeys (id) {\n      this.$refs.tree1.setCheckedKeys([id])\n      this.$refs.tree2.setCheckedKeys([id])\n    },\n    // 点击树节点事件处理\n    handleTreeNodeClick (data, checked, deep) {\n      const option = {\n        px: camera.position.x,\n        pz: camera.position.z,\n        py: camera.position.y\n      }\n      const options2 = {\n        px: 25,\n        pz: 25,\n        py: 25\n      }\n      const tween = new TWEEN.Tween(option)\n        .to({\n          px: 7,\n          pz: 3,\n          py: 15\n        }, 10000).delay(1000)\n        .onUpdate(() => {\n          console.log(camera.position.x, camera.position.y, camera.position.z)\n          camera.position.x = options2.px\n          camera.position.z = options2.pz\n          camera.position.y = options2.py\n        })\n      tween.easing(TWEEN.Easing.Quadratic.Out)\n      tween.start()\n\n      // 模拟tree加载情况\n      if (data.id === 0) {\n        this.resetChecked()\n        if (!this.isLoaded_0) this.setCheckedKeys(0)\n        this.isLoaded_0 = !this.isLoaded_0\n        if (this.isLoaded_0) {\n          floor_1.visible = floor_2.visible = floor_3.visible = floor_4.visible = floor_5.visible = floor_6.visible = true\n          context_1.visible = context_2.visible = context_3.visible = context_4.visible = context_5.visible = context_6.visible = false\n        } else {\n          floor_1.visible = floor_2.visible = floor_3.visible = floor_4.visible = floor_5.visible = floor_6.visible = false\n          context_1.visible = context_2.visible = context_3.visible = context_4.visible = context_5.visible = context_6.visible = false\n        }\n        return\n      } else {\n        if (this.isLoaded_0) {\n          this.resetChecked()\n          this.isLoaded_0 = false\n          this.setCheckedKeys(data.id)\n          floor_1.visible = floor_2.visible = floor_3.visible = floor_4.visible = floor_5.visible = floor_6.visible = false\n          context_1.visible = context_2.visible = context_3.visible = context_4.visible = context_5.visible = context_6.visible = false\n        }\n      }\n      this.isLoaded_11 = !!(floor_1.visible && context_1.visible)\n      this.isLoaded_12 = !!(floor_2.visible && context_2.visible)\n      this.isLoaded_13 = !!(floor_3.visible && context_3.visible)\n      this.isLoaded_14 = !!(floor_4.visible && context_4.visible)\n      this.isLoaded_15 = !!(floor_5.visible && context_5.visible)\n      this.isLoaded_16 = !!(floor_6.visible && context_6.visible)\n      this.isLoaded_1 = !!(floor_1.visible && context_1.visible && floor_2.visible && context_2.visible &&\n        floor_3.visible && context_3.visible && floor_4.visible && context_4.visible &&\n        floor_5.visible && context_5.visible && floor_6.visible && context_6.visible)\n\n      // 加载和删除模型\n      switch (data.id) {\n        case 1:\n          this.isLoaded_1 = !this.isLoaded_1\n          floor_1.visible = this.isLoaded_1\n          context_1.visible = this.isLoaded_1\n          floor_2.visible = this.isLoaded_1\n          context_2.visible = this.isLoaded_1\n          floor_3.visible = this.isLoaded_1\n          context_3.visible = this.isLoaded_1\n          floor_4.visible = this.isLoaded_1\n          context_4.visible = this.isLoaded_1\n          floor_5.visible = this.isLoaded_1\n          context_5.visible = this.isLoaded_1\n          floor_6.visible = this.isLoaded_1\n          context_6.visible = this.isLoaded_1\n          break\n        case 11:\n          this.isLoaded_11 = !this.isLoaded_11\n          floor_1.visible = this.isLoaded_11\n          context_1.visible = this.isLoaded_11\n          break\n        case 12:\n          this.isLoaded_12 = !this.isLoaded_12\n          floor_2.visible = this.isLoaded_12\n          context_2.visible = this.isLoaded_12\n          break\n        case 13:\n          this.isLoaded_13 = !this.isLoaded_13\n          floor_3.visible = this.isLoaded_13\n          context_3.visible = this.isLoaded_13\n          break\n        case 14:\n          this.isLoaded_14 = !this.isLoaded_14\n          floor_4.visible = this.isLoaded_14\n          context_4.visible = this.isLoaded_14\n          break\n        case 15:\n          this.isLoaded_15 = !this.isLoaded_15\n          floor_5.visible = this.isLoaded_15\n          context_5.visible = this.isLoaded_15\n          break\n        case 16:\n          this.isLoaded_16 = !this.isLoaded_16\n          floor_6.visible = this.isLoaded_16\n          context_6.visible = this.isLoaded_16\n          break\n        case 101:\n          floor_1.visible = !floor_1.visible\n          break\n        case 102:\n          context_1.visible = !context_1.visible\n          break\n        case 103:\n          floor_2.visible = !floor_2.visible\n          break\n        case 104:\n          context_2.visible = !context_2.visible\n          break\n        case 105:\n          floor_3.visible = !floor_3.visible\n          break\n        case 106:\n          context_3.visible = !context_3.visible\n          break\n        case 107:\n          floor_4.visible = !floor_4.visible\n          break\n        case 108:\n          context_4.visible = !context_4.visible\n          break\n        case 109:\n          floor_5.visible = !floor_5.visible\n          break\n        case 110:\n          context_5.visible = !context_5.visible\n          break\n        case 111:\n          floor_6.visible = !floor_6.visible\n          break\n        case 112:\n          context_6.visible = !context_6.visible\n          break\n      }\n    },\n    // 初始化\n    init () {\n      function onMouseDblclick (event) {\n        console.log((event.clientX / window.innerWidth) * 2 - 1)\n        console.log(-(event.clientY / window.innerHeight) * 2 + 1)\n      }\n\n      // 创建场景对象Scene\n      this.container = document.getElementById('container')\n      this.container.style.height = window.innerHeight + 'px'\n      scene = new THREE.Scene()\n      scene.background = new THREE.Color(0xbfd1e5)\n      // 创建渲染器对象\n      this.renderer = new THREE.WebGLRenderer({ antialias: true })\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight)\n      this.renderer.setPixelRatio(window.devicePixelRatio)\n      this.container.appendChild(this.renderer.domElement)\n      // 相机设置\n      const fov = 45\n      const aspect = 2\n      const near = 0.1\n      const far = 50\n      this.container = document.getElementById('container')\n      camera = new THREE.PerspectiveCamera(\n        fov, aspect, near, far\n      )\n      camera.position.set(20, 15, 20) // 设置相机位置\n      // 光源设置\n      // 点光源\n      let point = new THREE.PointLight(0xffffff)\n      point.position.set(400, 200, 300) // 点光源位置\n      scene.add(point) // 点光源添加到场景中\n      // 环境光\n      let ambient = new THREE.AmbientLight(0x444444)\n      scene.add(ambient)\n      this.clock = new THREE.Clock()\n      // onresize 事件会在窗口被调整大小时发生\n      window.onresize = () => {\n        // 重置渲染器输出画布canvas尺寸\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        // 全屏情况下：设置观察范围长宽比aspect为窗口宽高比\n        camera.aspect = window.innerWidth / window.innerHeight\n        // 渲染器执行render方法的时候会读取相机对象的投影矩阵属性projectionMatrix\n        // 但是不会每渲染一帧，就通过相机的属性计算投影矩阵(节约计算资源)\n        // 如果相机的一些属性发生了变化，需要执行updateProjectionMatrix ()方法更新相机的投影矩阵\n        camera.updateProjectionMatrix()\n      }\n      controls = new OrbitControls(camera, this.renderer.domElement)\n      controls.target.set(5, 0, -10)\n      controls.update()\n\n      // 模型加载\n      this.objectLoader()\n\n      // 三维坐标系\n      const axesHelper = new THREE.AxesHelper(150)\n      // 和网格模型Mesh一样，AxesHelper你也可以理解为一个模型对象，需要插入到场景中\n      scene.add(axesHelper)\n      // 事件绑定\n      addEventListener('click', onMouseDblclick, false)\n\n      const material = new THREE.PointsMaterial({ color: '0xFF0000', size: '0.1' })\n      const geometry = new THREE.BufferGeometry()\n      const pointsArray = []\n      pointsArray.push(new THREE.Vector3(10, 10, 10))\n      pointsArray.push(new THREE.Vector3(12, 12, 12))\n      geometry.setFromPoints(pointsArray)\n      // 下述基本一样\n      const point1 = new THREE.Points(geometry, material)\n      scene.add(point1)\n    },\n    // 动画\n    animate () {\n      TWEEN.update()\n      requestAnimationFrame(this.animate)\n      this.renderer.render(scene, camera)\n    },\n    // 模型加载\n    objectLoader () {\n      this.gltfLoader = new GLTFLoader()\n      let url\n      url = '/static/1楼墙体/1楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_1 = new THREE.Group()\n        floor_1.add(obj)\n        scene.add(floor_1)\n        floor_1.visible = false\n      })\n      url = '/static/1楼桌椅/1楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_1 = new THREE.Group()\n        context_1.add(obj)\n        scene.add(context_1)\n        context_1.visible = false\n      })\n      url = '/static/2楼墙体/2楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_2 = new THREE.Group()\n        floor_2.add(obj)\n        scene.add(floor_2)\n        floor_2.visible = false\n      })\n      url = '/static/2楼桌椅/2楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_2 = new THREE.Group()\n        context_2.add(obj)\n        scene.add(context_2)\n        context_2.visible = false\n      })\n      url = '/static/3楼墙体/3楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_3 = new THREE.Group()\n        floor_3.add(obj)\n        scene.add(floor_3)\n        floor_3.visible = false\n      })\n      url = '/static/3楼桌椅/3楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_3 = new THREE.Group()\n        context_3.add(obj)\n        scene.add(context_3)\n        context_3.visible = false\n      })\n      url = '/static/4楼墙体/4楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_4 = new THREE.Group()\n        floor_4.add(obj)\n        scene.add(floor_4)\n        floor_4.visible = false\n      })\n      url = '/static/4楼桌椅/4楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_4 = new THREE.Group()\n        context_4.add(obj)\n        scene.add(context_4)\n        context_4.visible = false\n      })\n      url = '/static/5楼墙体/5楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_5 = new THREE.Group()\n        floor_5.add(obj)\n        scene.add(floor_5)\n        floor_5.visible = false\n      })\n      url = '/static/5楼桌椅/5楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_5 = new THREE.Group()\n        context_5.add(obj)\n        scene.add(context_5)\n        context_5.visible = false\n      })\n      url = '/static/6楼墙体/6楼墙体.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        floor_6 = new THREE.Group()\n        floor_6.add(obj)\n        scene.add(floor_6)\n        floor_6.visible = false\n      })\n      url = '/static/6楼桌椅/6楼桌椅.gltf'\n      this.gltfLoader.load(url, (gltf) => {\n        const obj = gltf.scene\n        obj.position.x = 0\n        obj.position.y = 0\n        obj.position.z = 0\n        obj.scale.x = 0.2\n        obj.scale.y = 0.2\n        obj.scale.z = 0.2\n        // eslint-disable-next-line camelcase\n        context_6 = new THREE.Group()\n        context_6.add(obj)\n        scene.add(context_6)\n        context_6.visible = false\n      })\n    }\n  }\n}\n</script>\n\n<style>\n#container {\n  position: absolute;\n  right: 0;\n  width: 80%;\n}\n\nel-container {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"]}]}