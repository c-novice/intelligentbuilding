{"remainingRequest":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\babel-loader\\lib\\index.js!D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\src\\components\\special.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\src\\components\\special.vue","mtime":1637386504945},{"path":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Others\\智慧楼宇\\intelligentbuilding\\intelligentbuilding\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["special.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header>\r\n      <el-page-header content=\"自由组合\">\r\n      </el-page-header>\r\n    </el-header>\r\n    <el-aside>\r\n      <el-switch v-model=\"switchRoaming\" :disabled=\"!ableRoaming\" active-text=\"漫游模式\" inactive-text=\" \"\r\n                 @change=\"roamingChange\"></el-switch>\r\n      <el-switch v-model=\"switchPatrol\" :disabled=\"!ablePatrol\" active-text=\"楼层巡视\" inactive-text=\" \"\r\n                 @change=\"patrolChange\"></el-switch>\r\n      <br><br>\r\n      <el-tree :data=\"simpleData\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree1\" highlight-current\r\n               :props=\"defaultProps\" @check=\"handleTreeNodeClick\">\r\n      </el-tree>\r\n      <el-tree :data=\"detailData\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree2\" highlight-current\r\n               :props=\"defaultProps\" @check=\"handleTreeNodeClick\">\r\n      </el-tree>\r\n    </el-aside>\r\n    <div id=\"container\"></div>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three/build/three.module'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min'\r\n// 场景和控制器\r\nlet scene = null\r\nlet controls = null\r\nlet camera = null\r\n// 详细模型的楼板\r\nlet floor = new Array(10)\r\n// 详细模型的桌椅\r\nlet context = new Array(10)\r\n// 漫游和巡视模式\r\nlet tweens = new Array(1000)\r\nlet positions = new Array(1000)\r\nexport default {\r\n  data () {\r\n    return {\r\n      // 树形组件控制\r\n      ableTree: false,\r\n      // 漫游与巡视按钮\r\n      ableRoaming: false,\r\n      switchRoaming: false,\r\n      ablePatrol: false,\r\n      switchPatrol: false,\r\n      // 树形组件\r\n      simpleData: [{ id: 0, label: '整体模型' }],\r\n      detailData: [{\r\n        id: 1,\r\n        label: '详细模型',\r\n        children: [\r\n          { id: 11, label: '1L', children: [{ id: 101, label: '1L墙体' }, { id: 102, label: '1L桌椅' }] },\r\n          { id: 12, label: '2L', children: [{ id: 103, label: '2L墙体' }, { id: 104, label: '2L桌椅' }] },\r\n          { id: 13, label: '3L', children: [{ id: 105, label: '3L墙体' }, { id: 106, label: '3L桌椅' }] },\r\n          { id: 14, label: '4L', children: [{ id: 107, label: '4L墙体' }, { id: 108, label: '4L桌椅' }] },\r\n          { id: 15, label: '5L', children: [{ id: 109, label: '5L墙体' }, { id: 110, label: '5L桌椅' }] },\r\n          { id: 16, label: '6L', children: [{ id: 111, label: '6L墙体' }, { id: 112, label: '6L桌椅' }] }\r\n        ],\r\n        disabled: this.ableTree\r\n      }],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label:\r\n          'label'\r\n      },\r\n      // 场景组件\r\n      renderer: null,\r\n      mesh: null,\r\n      clock: null,\r\n      // 判断加载\r\n      isLoaded: Array.apply(null, Array(20)).map(() => false)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n    this.animate()\r\n  },\r\n  methods: {\r\n    // 漫游\r\n    roamingChange (state) {\r\n      this.switchRoaming = !!this.switchRoaming\r\n      if (state) { // 执行漫游\r\n        // 设置禁用关系\r\n        this.ablePatrol = false\r\n        this.ableTree = true\r\n        // 获取当前的选中楼层\r\n        let checked = null\r\n        if (this.isLoaded[0]) {\r\n          checked = 0\r\n        } else {\r\n          for (let i = 11; i <= 16; i++) {\r\n            if (this.isLoaded[i]) {\r\n              checked = i\r\n              break\r\n            }\r\n          }\r\n        }\r\n        // 执行漫游\r\n        if (checked === null) console.assert('roaming bug')\r\n        else {\r\n          tweens[checked % 10 * 10].start()\r\n          this.$message.success('您已进入漫游模式')\r\n          // 监控鼠标单击\r\n          let cur = 1\r\n          document.onclick = () => {\r\n            if (this.switchRoaming) {\r\n              cur = (cur + 1) % 2\r\n              if (cur === 0) {\r\n                // 提示进入漫游\r\n                tweens[checked % 10 * 10].start()\r\n              } else if (cur === 1) {\r\n                let count = 0\r\n                let myVar = setInterval(() => {\r\n                  count++\r\n                  if (count === 4) {\r\n                    tweens[checked % 10 * 10].start()\r\n                    clearInterval(myVar)\r\n                    cur = 0\r\n                  }\r\n                }, 1000)\r\n                for (let i = 0; i < 70; ++i) {\r\n                  if (tweens[i] != null) tweens[i].stop()\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else { // 停止漫游\r\n        this.$message.success('您已退出漫游模式')\r\n        // 解除禁用关系\r\n        this.ablePatrol = true\r\n        this.ableTree = false\r\n        for (let i = 0; i < 70; ++i) {\r\n          if (tweens[i] != null) tweens[i].stop()\r\n        }\r\n      }\r\n    },\r\n    // 巡视\r\n    patrolChange (state) {\r\n      this.switchPatrol = !!this.switchPatrol\r\n      if (state) { // 执行巡视\r\n        // 设置禁用关系\r\n        this.ableRoaming = false\r\n        this.ableTree = true\r\n        // 获取当前的选中楼层\r\n        let checked = null\r\n        for (let i = 11; i <= 16; i++) {\r\n          if (this.isLoaded[i]) {\r\n            checked = i\r\n            break\r\n          }\r\n        }\r\n        // 执行巡视\r\n        if (checked === null) console.assert('patrol bug')\r\n        else {\r\n          tweens[checked % 10 * 100].start()\r\n          // 监控鼠标单击\r\n          let cur = 1\r\n          document.onclick = () => {\r\n            if (this.switchPatrol) {\r\n              cur = (cur + 1) % 2\r\n              if (cur === 0) {\r\n                // 提示进入巡视\r\n                this.$message.success('您已进入巡视模式，点击触摸屏会暂停15s')\r\n                tweens[checked % 10 * 100].start()\r\n              } else if (cur === 1) {\r\n                let count = 0\r\n                let myVar = setInterval(() => {\r\n                  count++\r\n                  if (count === 4) {\r\n                    tweens[checked % 10 * 100].start()\r\n                    clearInterval(myVar)\r\n                    cur = 0\r\n                  }\r\n                }, 1000)\r\n                for (let i = 100; i < 700; ++i) {\r\n                  if (tweens[i] != null) tweens[i].stop()\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else { // 停止巡视\r\n        this.$message.success('您已退出巡视模式')\r\n        // 解除禁用关系\r\n        this.ableRoaming = true\r\n        this.ableTree = false\r\n        for (let i = 100; i < 700; ++i) {\r\n          if (tweens[i] != null) tweens[i].stop()\r\n        }\r\n      }\r\n    },\r\n    // 选择状态置空\r\n    resetChecked () {\r\n      this.$refs.tree1.setCheckedKeys([])\r\n      this.$refs.tree2.setCheckedKeys([])\r\n    },\r\n    setCheckedKeys (id) {\r\n      this.$refs.tree1.setCheckedKeys([id])\r\n      this.$refs.tree2.setCheckedKeys([id])\r\n    },\r\n    // 点击树节点事件处理\r\n    handleTreeNodeClick (data) {\r\n      // 强制退出漫游和巡视模式\r\n      if (this.switchRoaming) {\r\n        this.roamingChange(false)\r\n        this.switchRoaming = false\r\n      } else if (this.switchPatrol) {\r\n        this.patrolChange(false)\r\n        this.switchPatrol = false\r\n      }\r\n      // 模拟tree加载情况\r\n      // 模型加载模块\r\n      if (data.id === 0) { // 整体模型\r\n        this.resetChecked()\r\n        if (!this.isLoaded[0]) this.setCheckedKeys(0)\r\n        this.isLoaded[0] = !this.isLoaded[0]\r\n        if (this.isLoaded[0]) {\r\n          for (let i = 1; i <= 6; ++i) {\r\n            floor[i].visible = true\r\n            context[i].visible = false\r\n            this.ableRoaming = true\r\n            this.ablePatrol = false\r\n          }\r\n        } else {\r\n          for (let i = 1; i <= 6; ++i) {\r\n            floor[i].visible = context[i].visible = false\r\n            this.ableRoaming = this.ablePatrol = false\r\n          }\r\n        }\r\n      } else { // 详细模型\r\n        if (this.isLoaded[0]) {\r\n          this.ableRoaming = this.ablePatrol = false\r\n          this.resetChecked()\r\n          this.isLoaded[0] = false\r\n          this.setCheckedKeys(data.id)\r\n          for (let i = 1; i <= 6; ++i) {\r\n            floor[i].visible = context[i].visible = false\r\n          }\r\n        }\r\n        // 楼层状态更新\r\n        for (let i = 1; i <= 6; ++i) {\r\n          this.isLoaded[10 + i] = (floor[i].visible && context[i].visible)\r\n        }\r\n        let flag = floor[1].visible\r\n        for (let i = 1; i <= 6; ++i) {\r\n          flag = (flag && floor[i].visible && context[i].visible)\r\n        }\r\n        this.isLoaded[1] = flag\r\n        // 加载和删除模型\r\n        if (data.id === 1) {\r\n          this.isLoaded[1] = !this.isLoaded[1]\r\n          for (let i = 1; i <= 6; ++i) {\r\n            floor[i].visible = context[i].visible = this.isLoaded[1]\r\n            this.isLoaded[10 + i] = this.isLoaded[1]\r\n          }\r\n        } else if (data.id < 20) {\r\n          this.isLoaded[data.id] = !this.isLoaded[data.id]\r\n          floor[data.id % 10].visible = context[data.id % 10].visible = this.isLoaded[data.id]\r\n        } else if (data.id < 1000) {\r\n          if (data.id % 2 === 0) {\r\n            context[(data.id % 100) / 2].visible = !context[(data.id % 100) / 2].visible\r\n            if (floor[(data.id % 100) / 2].visible === context[(data.id % 100) / 2].visible) this.isLoaded[10 + ((data.id % 100) / 2)] = floor[(data.id % 100) / 2].visible\r\n          } else {\r\n            floor[(data.id % 100 + 1) / 2].visible = !floor[(data.id % 100 + 1) / 2].visible\r\n            if (floor[(data.id % 100 + 1) / 2].visible === context[(data.id % 100 + 1) / 2].visible) this.isLoaded[10 + ((data.id % 100 + 1) / 2)] = floor[(data.id % 100 + 1) / 2].visible\r\n          }\r\n        }\r\n        // 漫游和巡视模块\r\n        let countLoad = 0\r\n        let isConsistSingle = false\r\n        for (let i = 11; i <= 16; ++i) {\r\n          if (this.isLoaded[i]) countLoad++\r\n          if (context[i % 10].visible !== floor[i % 10].visible) isConsistSingle = true\r\n        }\r\n        this.ableRoaming = (!isConsistSingle && countLoad === 1) || this.isLoaded[0]\r\n        this.ablePatrol = !isConsistSingle && (countLoad === 1)\r\n      }\r\n    },\r\n    // 初始化\r\n    init () {\r\n      // 创建场景对象Scene\r\n      this.container = document.getElementById('container')\r\n      this.container.style.height = window.innerHeight + 'px'\r\n      scene = new THREE.Scene()\r\n      scene.background = new THREE.Color(255, 255, 255)\r\n      // 创建渲染器对象\r\n      this.renderer = new THREE.WebGLRenderer({ antialias: true })\r\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight)\r\n      this.renderer.setPixelRatio(window.devicePixelRatio)\r\n      this.container.appendChild(this.renderer.domElement)\r\n      // 相机设置\r\n      const fov = 45\r\n      const aspect = 2\r\n      const near = 0.1\r\n      const far = 50\r\n      this.container = document.getElementById('container')\r\n      camera = new THREE.PerspectiveCamera(\r\n        fov, aspect, near, far\r\n      )\r\n      camera.position.set(25, 15, 15) // 设置相机位置\r\n      camera.lookAt(0, 0, 0)\r\n      // 光源设置\r\n      // 点光源\r\n      let point = new THREE.PointLight(0xffffff)\r\n      point.position.set(400, 200, 300) // 点光源位置\r\n      scene.add(point) // 点光源添加到场景中\r\n      // 环境光\r\n      let ambient = new THREE.AmbientLight(0x444444)\r\n      scene.add(ambient)\r\n      this.clock = new THREE.Clock()\r\n      // onresize 事件会在窗口被调整大小时发生\r\n      window.onresize = () => {\r\n        // 重置渲染器输出画布canvas尺寸\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        // 全屏情况下：设置观察范围长宽比aspect为窗口宽高比\r\n        camera.aspect = window.innerWidth / window.innerHeight\r\n        // 如果相机的一些属性发生了变化，需要执行updateProjectionMatrix ()方法更新相机的投影矩阵\r\n        camera.updateProjectionMatrix()\r\n      }\r\n      controls = new OrbitControls(camera, this.renderer.domElement)\r\n      controls.target.set(5, 0, -10)\r\n      controls.update()\r\n      // 模型加载\r\n      for (let i = 1; i <= 6; ++i) {\r\n        this.objectLoader('./static/' + i.toString() + '楼墙体/' + i.toString() + '楼墙体.gltf', 'floor', i)\r\n        this.objectLoader('./static/' + i.toString() + '楼桌椅/' + i.toString() + '楼桌椅.gltf', 'context', i)\r\n      }\r\n      const axesHelper = new THREE.AxesHelper(200)\r\n      scene.add(axesHelper)\r\n      // 漫游数据\r\n      // 位置\r\n      // 整体\r\n      positions[0] = { px: 20, py: 10, pz: 10 }\r\n      positions[1] = { px: 25, pz: -22, py: 10 }\r\n      positions[2] = { px: -13, pz: -22, py: 10 }\r\n      positions[3] = { px: -16, pz: 10, py: 10 }\r\n      positions[4] = { px: 20, py: 10, pz: 10 }\r\n      // 1L\r\n      positions[10] = { px: 20, py: 5, pz: 10 }\r\n      positions[11] = { px: 25, pz: -22, py: 5 }\r\n      positions[12] = { px: -13, pz: -22, py: 5 }\r\n      positions[13] = { px: -16, pz: 10, py: 5 }\r\n      positions[14] = { px: 20, py: 5, pz: 10 }\r\n      // 2L\r\n      positions[20] = { px: 20, py: 6, pz: 10 }\r\n      positions[21] = { px: 25, pz: -22, py: 6 }\r\n      positions[22] = { px: -13, pz: -22, py: 6 }\r\n      positions[23] = { px: -16, pz: 10, py: 6 }\r\n      positions[24] = { px: 20, py: 6, pz: 10 }\r\n      // 3L\r\n      positions[30] = { px: 20, py: 7, pz: 10 }\r\n      positions[31] = { px: 25, pz: -22, py: 7 }\r\n      positions[32] = { px: -13, pz: -22, py: 7 }\r\n      positions[33] = { px: -16, pz: 10, py: 7 }\r\n      positions[34] = { px: 20, py: 7, pz: 10 }\r\n      // 4L\r\n      positions[40] = { px: 20, py: 8, pz: 10 }\r\n      positions[41] = { px: 25, pz: -22, py: 8 }\r\n      positions[42] = { px: -13, pz: -22, py: 8 }\r\n      positions[43] = { px: -16, pz: 10, py: 8 }\r\n      positions[44] = { px: 20, py: 8, pz: 10 }\r\n      // 5L\r\n      positions[50] = { px: 20, py: 9, pz: 10 }\r\n      positions[51] = { px: 25, pz: -22, py: 9 }\r\n      positions[52] = { px: -13, pz: -22, py: 9 }\r\n      positions[53] = { px: -16, pz: 10, py: 9 }\r\n      positions[54] = { px: 20, py: 9, pz: 10 }\r\n      // 6L\r\n      positions[60] = { px: 20, py: 10, pz: 10 }\r\n      positions[61] = { px: 25, pz: -22, py: 10 }\r\n      positions[62] = { px: -13, pz: -22, py: 10 }\r\n      positions[63] = { px: -16, pz: 10, py: 10 }\r\n      positions[64] = { px: -16, pz: 10, py: 10 }\r\n      // 动画\r\n      for (let i = 0; i <= 6; ++i) {\r\n        for (let j = 0; j <= 4; ++j) {\r\n          tweens[i * 10 + j] = new TWEEN.Tween(positions[i * 10 + j]).to(positions[(j + 1) % 5 === 0 ? i * 10 + j - 4 : i * 10 + j + 1], 7000)\r\n            .onUpdate(function (object) {\r\n              camera.position.x = object.px\r\n              camera.position.z = object.pz\r\n              camera.position.y = object.py\r\n              if (i === 0) camera.lookAt(6.5, 1, -6)\r\n              else if (i === 1) camera.lookAt(6.5, 2, -6)\r\n              else if (i === 2) camera.lookAt(6.5, 2, -6)\r\n              else if (i === 3) camera.lookAt(6.5, 3, -6)\r\n              else if (i === 4) camera.lookAt(6.5, 4, -6)\r\n              else if (i === 5) camera.lookAt(6.5, 4, -6)\r\n              else if (i === 6) camera.lookAt(6.5, 5, -6)\r\n            })\r\n          tweens[i * 10 + j].easing(TWEEN.Easing.Quadratic.Out)\r\n        }\r\n      }\r\n      // 连接\r\n      for (let i = 0; i <= 6; ++i) {\r\n        for (let j = 0; j <= 4; ++j) {\r\n          tweens[i * 10 + j].chain(tweens[(j + 1) % 5 === 0 ? i * 10 + j - 4 : i * 10 + j + 1])\r\n        }\r\n      }\r\n      // 巡视数据\r\n      // 1L\r\n      positions[100] = { px: 2.12, pz: -9.75, py: 0.31 }\r\n      positions[101] = { px: 10.4, pz: -9.75, py: 0.31 }\r\n      positions[102] = { px: 10.4, pz: -9.75, py: 0.31 }\r\n      positions[103] = { px: 10.4, pz: -2, py: 0.31 }\r\n      positions[104] = { px: 10.4, pz: -2, py: 0.31 }\r\n      positions[105] = { px: 2.12, pz: -2, py: 0.31 }\r\n      positions[106] = { px: 2.12, pz: -2, py: 0.31 }\r\n      positions[107] = { px: 2.12, pz: -9.75, py: 0.31 }\r\n      positions[108] = { px: 2.12, pz: -9.75, py: 0.31 }\r\n\r\n      // 2L\r\n      positions[200] = { px: 2.12, pz: -9.75, py: 1.2 }\r\n      positions[201] = { px: 10.4, pz: -9.75, py: 1.2 }\r\n      positions[202] = { px: 10.4, pz: -9.75, py: 1.2 }\r\n      positions[203] = { px: 10.4, pz: -2, py: 1.2 }\r\n      positions[204] = { px: 10.4, pz: -2, py: 1.2 }\r\n      positions[205] = { px: 2.12, pz: -2, py: 1.2 }\r\n      positions[206] = { px: 2.12, pz: -2, py: 1.2 }\r\n      positions[207] = { px: 2.12, pz: -9.75, py: 1.2 }\r\n      positions[208] = { px: 2.12, pz: -9.75, py: 1.2 }\r\n      // 3L\r\n      positions[300] = { px: 2.12, pz: -9.75, py: 1.98 }\r\n      positions[301] = { px: 10.4, pz: -9.75, py: 1.98 }\r\n      positions[302] = { px: 10.4, pz: -9.75, py: 1.98 }\r\n      positions[303] = { px: 10.4, pz: -2, py: 1.98 }\r\n      positions[304] = { px: 10.4, pz: -2, py: 1.98 }\r\n      positions[305] = { px: 2.12, pz: -2, py: 1.98 }\r\n      positions[306] = { px: 2.12, pz: -2, py: 1.98 }\r\n      positions[307] = { px: 2.12, pz: -9.75, py: 1.98 }\r\n      positions[308] = { px: 2.12, pz: -9.75, py: 1.98 }\r\n\r\n      // 4L\r\n      positions[400] = { px: 2.12, pz: -9.75, py: 2.87 }\r\n      positions[401] = { px: 10.4, pz: -9.75, py: 2.87 }\r\n      positions[402] = { px: 10.4, pz: -9.75, py: 2.87 }\r\n      positions[403] = { px: 10.4, pz: -2, py: 2.87 }\r\n      positions[404] = { px: 10.4, pz: -2, py: 2.87 }\r\n      positions[405] = { px: 2.12, pz: -2, py: 2.87 }\r\n      positions[406] = { px: 2.12, pz: -2, py: 2.87 }\r\n      positions[407] = { px: 2.12, pz: -9.75, py: 2.87 }\r\n      positions[408] = { px: 2.12, pz: -9.75, py: 2.87 }\r\n      // 5L\r\n      positions[500] = { px: 2.12, pz: -9.75, py: 3.77 }\r\n      positions[501] = { px: 10.4, pz: -9.75, py: 3.77 }\r\n      positions[502] = { px: 10.4, pz: -9.75, py: 3.77 }\r\n      positions[503] = { px: 10.4, pz: -2, py: 3.77 }\r\n      positions[504] = { px: 10.4, pz: -2, py: 3.77 }\r\n      positions[505] = { px: 2.12, pz: -2, py: 3.77 }\r\n      positions[506] = { px: 2.12, pz: -2, py: 3.77 }\r\n      positions[507] = { px: 2.12, pz: -9.75, py: 3.77 }\r\n      positions[508] = { px: 2.12, pz: -9.75, py: 3.77 }\r\n      // 6L\r\n      positions[600] = { px: 2.12, pz: -9.75, py: 4.57 }\r\n      positions[601] = { px: 10.4, pz: -9.75, py: 4.57 }\r\n      positions[602] = { px: 10.4, pz: -9.75, py: 4.57 }\r\n      positions[603] = { px: 10.4, pz: -2, py: 4.57 }\r\n      positions[604] = { px: 10.4, pz: -2, py: 4.57 }\r\n      positions[605] = { px: 2.12, pz: -2, py: 4.57 }\r\n      positions[606] = { px: 2.12, pz: -2, py: 4.57 }\r\n      positions[607] = { px: 2.12, pz: -9.75, py: 4.57 }\r\n      positions[608] = { px: 2.12, pz: -9.75, py: 4.57 }\r\n      for (let i = 1; i <= 6; ++i) {\r\n        for (let j = 0; j <= 8; j++) {\r\n          let times = 20\r\n          if (j % 2 !== 0) {\r\n            times = 20\r\n          }\r\n          tweens[i * 100 + j] = new TWEEN.Tween(positions[i * 100 + j]).to(positions[(j + 1) % 9 === 0 ? i * 100 + j - 8 : i * 100 + j + 1], 500 * times)\r\n            .onUpdate(function (object) {\r\n              camera.position.x = object.px\r\n              camera.position.z = object.pz\r\n              camera.position.y = object.py\r\n              for (let m = 0; m <= 8; ++m) {\r\n                console.log(Math.floor(positions[100 * i + m].px * 100))\r\n                positions[100 * i + m].px = Math.floor(positions[100 * i + m].px * 100) / 100.0\r\n              }\r\n              if (camera.position.x > positions[100 * i].px && camera.position.x < positions[100 * i + 1].px && camera.position.z === positions[100 * i].pz) {\r\n                switch (i) {\r\n                  case 1:\r\n                    camera.lookAt(10.4, 0.31, -9.75)\r\n                    console.log(11111111111)\r\n                    break\r\n                  case 2:\r\n                    camera.lookAt(10.4, 1.2, -9.75)\r\n                    break\r\n                  case 3:\r\n                    camera.lookAt(10.4, 1.98, -9.75)\r\n                    break\r\n                  case 4:\r\n                    camera.lookAt(10.4, 2.87, -9.75)\r\n                    break\r\n                  case 5:\r\n                    camera.lookAt(10.4, 3.77, -9.75)\r\n                    break\r\n                  case 6:\r\n                    camera.lookAt(10.4, 4.57, -9.75)\r\n                }\r\n              } else if (camera.position.z > positions[100 * i + 1].pz && camera.position.z < positions[100 * i + 3].pz && camera.position.x === positions[100 * i + 3].px) {\r\n                switch (i) {\r\n                  case 1:\r\n                    camera.lookAt(10.4, 0.31, -2)\r\n                    break\r\n                  case 2:\r\n                    camera.lookAt(10.4, 1.2, -2)\r\n                    break\r\n                  case 3:\r\n                    camera.lookAt(10.4, 1.98, -2)\r\n                    break\r\n                  case 4:\r\n                    camera.lookAt(10.4, 2.87, -2)\r\n                    break\r\n                  case 5:\r\n                    camera.lookAt(10.4, 3.77, -2)\r\n                    break\r\n                  case 6:\r\n                    camera.lookAt(10.4, 4.57, -2)\r\n                }\r\n              } else if (camera.position.x > positions[100 * i + 5].px && camera.position.x < positions[100 * i + 3].px && camera.position.z === positions[100 * i + 5].pz) {\r\n                switch (i) {\r\n                  case 1:\r\n                    camera.lookAt(2.12, 0.31, -2)\r\n                    break\r\n                  case 2:\r\n                    camera.lookAt(2.12, 1.2, -2)\r\n                    break\r\n                  case 3:\r\n                    camera.lookAt(2.12, 1.98, -2)\r\n                    break\r\n                  case 4:\r\n                    camera.lookAt(2.12, 2.87, -2)\r\n                    break\r\n                  case 5:\r\n                    camera.lookAt(2.12, 3.77, -2)\r\n                    break\r\n                  case 6:\r\n                    camera.lookAt(2.12, 4.57, -2)\r\n                }\r\n              } else if (camera.position.z > positions[100 * i].pz && camera.position.z < positions[100 * i + 5].pz && camera.position.x === positions[100 * i].pz) {\r\n                switch (i) {\r\n                  case 1:\r\n                    camera.lookAt(2.12, 0.31, -9.75)\r\n                    break\r\n                  case 2:\r\n                    camera.lookAt(2.12, 1.2, -9.75)\r\n                    break\r\n                  case 3:\r\n                    camera.lookAt(2.12, 1.98, -9.75)\r\n                    break\r\n                  case 4:\r\n                    camera.lookAt(2.12, 2.87, -9.75)\r\n                    break\r\n                  case 5:\r\n                    camera.lookAt(2.12, 3.77, -9.75)\r\n                    break\r\n                  case 6:\r\n                    camera.lookAt(2.12, 4.57, -9.75)\r\n                }\r\n              } else if (camera.position.z === positions[100 * i].pz && camera.position.x === positions[100 * i].px && camera.position.y === positions[100 * i].py) {\r\n                camera.rotateY(-0.008)\r\n              } else if (camera.position.z === [100 * i + 1].pz && camera.position.x === positions[100 * i + 1].px && camera.position.y === positions[100 * i + 1].py) {\r\n                camera.rotateY(-0.008)\r\n              } else if (camera.position.z === positions[100 * i + 3].pz && camera.position.x === positions[100 * i + 3].px && camera.position.y === positions[100 * i + 3].py) {\r\n                camera.rotateY(-0.008)\r\n              } else if (camera.position.z === positions[100 * i + 5].pz && camera.position.x === positions[100 * i + 5].px && camera.position.y === positions[100 * i + 5].py) {\r\n                camera.rotateY(-0.008)\r\n              }\r\n            })\r\n          tweens[i * 100 + j].easing(TWEEN.Easing.Quadratic.Out)\r\n        }\r\n      }\r\n      // 连接\r\n      for (let i = 1; i <= 6; ++i) {\r\n        for (let j = 0; j <= 8; ++j) {\r\n          tweens[i * 100 + j].chain(tweens[(j + 1) % 9 === 0 ? i * 100 + j - 8 : i * 100 + j + 1])\r\n        }\r\n      }\r\n    },\r\n    // 更新\r\n    animate () {\r\n      TWEEN.update()\r\n      requestAnimationFrame(this.animate)\r\n      this.renderer.render(scene, camera)\r\n    },\r\n    // 模型加载\r\n    objectLoader (url, type, id) {\r\n      this.gltfLoader = new GLTFLoader()\r\n      this.gltfLoader.load(url, (gltf) => {\r\n        const obj = gltf.scene\r\n        obj.position.x = obj.position.y = obj.position.z = 0\r\n        obj.scale.x = obj.scale.y = obj.scale.z = 0.2\r\n        if (type === 'floor') {\r\n          floor[id] = new THREE.Group()\r\n          floor[id].add(obj)\r\n          scene.add(floor[id])\r\n          floor[id].visible = false\r\n        } else if (type === 'context') {\r\n          context[id] = new THREE.Group()\r\n          context[id].add(obj)\r\n          scene.add(context[id])\r\n          context[id].visible = false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#container {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 80%;\r\n}\r\n\r\nel-aside {\r\n  position: absolute;\r\n  left: 0;\r\n  width: 20%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}